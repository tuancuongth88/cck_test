<?php
/**
 * Created by VeHo.
 * Year: 2023-05-25
 */

namespace Repository;

use App\Models\HR;
use App\Models\UserFavorite;
use App\Models\Work;
use App\Repositories\Contracts\UserFavoriteRepositoryInterface;
use Helper\Common;
use Illuminate\Support\Facades\DB;
use Repository\BaseRepository;
use Illuminate\Foundation\Application;
use Illuminate\Support\Facades\Auth;

class UserFavoriteRepository extends BaseRepository implements UserFavoriteRepositoryInterface
{

     public function __construct(Application $app)
     {
         parent::__construct($app);

     }

    /**
       * Instantiate model
       *
       * @param UserFavorite $model
       */

    public function model()
    {
        return UserFavorite::class;
    }

    public function create(array $attributes)
    {
        $attributes['user_id'] = Auth::id();
        return UserFavorite::firstOrCreate($attributes); // TODO: Change the autogenerated stub
    }

    public function getAll($request)
    {
        $user = Auth::user();
        if($user->type == HR || $user->type == HR_MANAGER || ($user->type == SUPER_ADMIN && $request->type == FAVORITE_TYPE_WORK)) {
            $data = Work::with(['company'])
                ->select('user_favorites.id as favorites_id', 'works.*')
                ->join('user_favorites', function($join) use ($user) {
                    $join->on('works.id', '=', 'user_favorites.relation_id')
                        ->where('user_favorites.user_id', $user->id)
                        ->where('user_favorites.type', FAVORITE_TYPE_WORK);
                });
        }

        if($user->type == COMPANY || $user->type == COMPANY_MANAGER || ($user->type == SUPER_ADMIN && $request->type == FAVORITE_TYPE_HRS)) {
            $data = HR::with(['languageRequirement:id,name'])
                ->select('user_favorites.id as favorites_id', 'hrs.*')
                ->join('user_favorites', function($join) use ($user) {
                    $join->on('hrs.id', '=', 'user_favorites.relation_id')
                        ->where('user_favorites.user_id', $user->id)
                        ->where('user_favorites.type', FAVORITE_TYPE_HRS);
                })
                ->where(HR::STATUS, HRS_STATUS_PUBLIC);
        }
        $data = $data->orderBy('id', 'desc');
        $data = Common::pagination($request, $data);
        return $data;
    }
}
